"""create access system base tables

Revision ID: 08bb38c0dc08
Revises: 
Create Date: 2023-01-16 22:00:40.579021

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '08bb38c0dc08'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_access_parent_company',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parent_name', sa.String(length=50), nullable=False),
    sa.Column('parent_cnpj', sa.String(length=14), nullable=False),
    sa.Column('parent_phone', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_access_employee',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parent_company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('cpf', sa.String(length=11), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parent_company_id'], ['system_access_parent_company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_access_employee_parent_company_id'), 'system_access_employee', ['parent_company_id'], unique=False)
    op.create_table('system_access_subsidiary_company',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parent_company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('company_name', sa.String(length=50), nullable=False),
    sa.Column('company_cnpj', sa.String(length=14), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parent_company_id'], ['system_access_parent_company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_access_subsidiary_company_parent_company_id'), 'system_access_subsidiary_company', ['parent_company_id'], unique=False)
    op.create_table('system_access_employee_subsidiary_reference',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parent_company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('employee_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('subsidiary_company_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['system_access_employee.id'], ),
    sa.ForeignKeyConstraint(['parent_company_id'], ['system_access_parent_company.id'], ),
    sa.ForeignKeyConstraint(['subsidiary_company_id'], ['system_access_subsidiary_company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_access_employee_subsidiary_reference_employee_id'), 'system_access_employee_subsidiary_reference', ['employee_id'], unique=False)
    op.create_index(op.f('ix_system_access_employee_subsidiary_reference_parent_company_id'), 'system_access_employee_subsidiary_reference', ['parent_company_id'], unique=False)
    op.create_index(op.f('ix_system_access_employee_subsidiary_reference_subsidiary_company_id'), 'system_access_employee_subsidiary_reference', ['subsidiary_company_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_system_access_employee_subsidiary_reference_subsidiary_company_id'), table_name='system_access_employee_subsidiary_reference')
    op.drop_index(op.f('ix_system_access_employee_subsidiary_reference_parent_company_id'), table_name='system_access_employee_subsidiary_reference')
    op.drop_index(op.f('ix_system_access_employee_subsidiary_reference_employee_id'), table_name='system_access_employee_subsidiary_reference')
    op.drop_table('system_access_employee_subsidiary_reference')
    op.drop_index(op.f('ix_system_access_subsidiary_company_parent_company_id'), table_name='system_access_subsidiary_company')
    op.drop_table('system_access_subsidiary_company')
    op.drop_index(op.f('ix_system_access_employee_parent_company_id'), table_name='system_access_employee')
    op.drop_table('system_access_employee')
    op.drop_table('system_access_parent_company')
    # ### end Alembic commands ###
